name: Sonar

on:
  push:
    branches:
      - main
      - sonar
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4

jobs:
  build-and-scan:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        env:
          - { cc: clang, cxx: clang++ }
          - { cc: gcc, cxx: g++ }
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install Qt
        run: |
          sudo apt-mark hold firefox grub-efi-amd64-signed
          sudo apt update
          sudo apt upgrade
          sudo apt install qtbase5{,-doc}-dev qtconnectivity5-{dev,doc-html} qttools5-dev{,-tools}
      - name: Install SonarQube build wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5
      - name: Build with SonarQube wrapper
        env:
          CC: ${{ matrix.env.cc }}
          CXX: ${{ matrix.env.cxx }}
          PROJECT_BUILD_ID: ${{ github.run_number }}.linux.x86-64.${{ matrix.env.cc }}
        run: |
          cmake -D CMAKE_BUILD_TYPE=Release -S "$GITHUB_WORKSPACE" -B "$RUNNER_TEMP"
          build-wrapper-linux-x86-64 --out-dir "$RUNNER_TEMP/sonar" cmake --build "$RUNNER_TEMP" --config Release
      - name: Scan with SonarQube
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >-
            --define project.settings=.sonar.properties
            --define sonar.cfamily.compile-commands="$RUNNER_TEMP/sonar/compile_commands.json"
